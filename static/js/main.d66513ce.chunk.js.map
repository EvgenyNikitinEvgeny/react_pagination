{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","allPages","Math","ceil","className","cn","disabled","href","onClick","map","page","active","items","App","useState","countItem","setCountItem","setPage","startItem","endItem","length","id","defaultValue","onChange","e","newSelect","target","value","htmlFor","number","slice","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAEjD,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBP,IAFd,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMR,EAAaD,EAAc,IAL5C,oBAUDE,EAASQ,KAAI,SAAAC,GAAI,OAChB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASX,IAHvB,SAOE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,YAAOG,GACXF,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUP,EAAcD,GAAWD,IAFvC,SAKE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAMR,EAAaD,EAAc,IAL5C,wBCtDFa,EAAQtB,EAAW,EAAG,IACzBmB,KAAI,SAAAf,GAAC,qBAAYA,MAEPmB,EAAgB,WAC3B,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOJ,EAAP,KAAaO,EAAb,KACMC,GAAaR,EAAO,GAAKK,EACzBI,EAAUD,EAAYH,EAAYH,EAAMQ,OAC1CR,EAAMQ,OACNF,EAAYH,EAOhB,OACE,sBAAKX,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EADX,mBAC0BQ,EAAY,EADtC,cAC6CC,EAD7C,aAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,aAAc,EACdC,SAAU,SAACC,GAAD,OApBDC,GAoBmBD,EAAEE,OAAOC,MAnB7CX,EAAaS,QACbR,EAAQ,GAFQ,IAACQ,GAeX,UAOE,wBAAQE,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEP,MAAO,GACPC,QAASiB,EACThB,YAAaW,EACbV,aAAc,SAAC6B,GAAD,OAAoBZ,EAAQY,MAG5C,6BACGjB,EAAMkB,MAAMZ,EAAWC,GAASV,KAAI,SAAAsB,GAAI,OACvC,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC1DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d66513ce.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange:(page:number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const allPages = getNumbers(1, Math.ceil(total / perPage));\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {allPages.map(page => (\n        <li\n          className={cn(\n            'page-item',\n            { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`# ${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage * perPage >= total },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [countItem, setCountItem] = useState(5);\n  const [page, setPage] = useState(1);\n  const startItem = (page - 1) * countItem;\n  const endItem = startItem + countItem > items.length\n    ? items.length\n    : startItem + countItem;\n\n  const getSelect = (newSelect: number): void => {\n    setCountItem(newSelect);\n    setPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${startItem + 1} - ${endItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={5}\n            onChange={(e) => getSelect(+e.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={42}\n        perPage={countItem}\n        currentPage={page}\n        onPageChange={(number: number) => setPage(number)}\n      />\n\n      <ul>\n        {items.slice(startItem, endItem).map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}